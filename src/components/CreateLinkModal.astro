---
import { Icon } from 'astro-icon/components'
---

<dialog>
  <article>
    <header>
      <button aria-label="Close" rel="prev"></button>
      <p>
        <strong>Solo fata un paso! {Astro.url.origin}</strong>
      </p>
    </header>
    <form>
      <fieldset role="group">
        <input type="text" name="title" id="title">
        <button>
          <Icon name="right" />
        </button>
      </fieldset>
    </form>
    <footer>
      <fieldset role="group">
        <input disabled type="text" name="link" id="link">
        <button disabled>
           <Icon name="right" />
        </button>
      </fieldset>
    </footer>
  </article>
</dialog>

<script>
  import { $showModal, $editorContent } from '../store/store.ts'
  import { actions } from 'astro:actions'
  import copy from 'copy-text-to-clipboard'

  const modal = document.querySelector("dialog")
  const closeModalBtn = document.querySelector('[rel="prev"]')
  const form = document.querySelector("form")

  let result

  $showModal.subscribe(showModal => {
    if (showModal === false) {
      modal?.close()
    } else {
      modal?.showModal()
    }
  })

  closeModalBtn?.addEventListener("click", () => $showModal.set(false))
  form?.addEventListener("submit", async (e) => {
    e.preventDefault()
    const title = form.querySelector("input")?.value || ''
    const code = $editorContent.get()

    try {
      const inputResult = modal?.querySelector("footer input") as HTMLInputElement | null
      const copyBtn = modal?.querySelector("footer button") as HTMLButtonElement | null
      const { data, error } = await actions.createNewBin({ title, code})
      if (inputResult) {
        inputResult.value = `${location.origin}/bin/${data?.id}`
        inputResult.disabled = false
      }
      if (copyBtn) {
        copyBtn.disabled = false
        copyBtn.addEventListener("click", () => {
          copy(inputResult.value, {
            target: modal as HTMLElement
          })
        })
      }
      result = data
    } catch (err) {
      console.log(err)
    }

  })
  </script>
